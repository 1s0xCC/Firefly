#pragma once

#define vps_port			36895
#define vps_hostname		"104.236.63.138" //"hs.epicdomain.name"

#define auth_text_size		128
#define auth_hash_size		64

#define status_size			128
#define failure_size		128

namespace firefly
{
	/**********************************************************************************************/

	/*
	*                                     authentication buffers
	*
	* Received from client
	* Always 532 bytes
	*
	*/
	
	typedef char			auth_text[auth_text_size];
	typedef unsigned char	auth_hash[auth_hash_size];
	
	enum auth_type
	{
		type_firefly_check_update,
		type_firefly_authenticate,
		type_firefly_heartbeat
	};
	
	struct auth_version
	{
		unsigned int major;
		unsigned int minor;
	};
	
	struct auth_buffer
	{
		auth_type type;
		auth_version version;
	};

	/* type_firefly_authenticate */
	struct firefly_auth_buffer
	{
		auth_text email;
		auth_text password;
	};
	
	/**********************************************************************************************/

	/*
	*                                     status buffer
	*
	* Sent to client after authentication attempt
	* Always 128 bytes
	*
	*/

	typedef unsigned char authentication_status[status_size];

	const authentication_status status_success =
	{
		0x5d, 0x52, 0x57, 0x73, 0xfd, 0xe7, 0x6f, 0xa2,
		0x0c, 0x5a, 0xd1, 0x7f, 0x7d, 0xd4, 0x91, 0x6b,
		0x08, 0x4c, 0x58, 0x7b, 0x60, 0x0b, 0xd6, 0xb4,
		0x93, 0x4b, 0xfc, 0xb7, 0xf5, 0xb0, 0x96, 0xbd,
		0x9f, 0x4a, 0xc6, 0x25, 0xd4, 0x81, 0x34, 0x7d,
		0x25, 0x0c, 0x79, 0xb1, 0xb9, 0x39, 0xa7, 0xac,
		0xfb, 0xcb, 0x59, 0x42, 0x8a, 0x63, 0x55, 0xa6,
		0x7e, 0x88, 0x8f, 0xca, 0x62, 0x56, 0x86, 0xd5,
		0x86, 0xd0, 0x07, 0x90, 0xfc, 0xb3, 0x44, 0xaa,
		0x86, 0x57, 0x14, 0x38, 0xdb, 0xea, 0x54, 0x4d,
		0x78, 0x76, 0x15, 0x52, 0xae, 0xa5, 0xac, 0x88,
		0xe7, 0xfd, 0x2b, 0xb6, 0x79, 0x2e, 0xb3, 0xfb,
		0x50, 0xc4, 0x31, 0x68, 0xa0, 0x9c, 0xd3, 0x55,
		0x46, 0xdb, 0xb2, 0x35, 0x11, 0x7d, 0x1c, 0x59,
		0x05, 0x02, 0x10, 0xc5, 0xb6, 0x7d, 0x77, 0x64,
		0x13, 0x3c, 0x07, 0x29, 0x91, 0x32, 0x79, 0xd3
	};

	const authentication_status status_failure =
	{
		0xad, 0x8e, 0x34, 0x8d, 0xb1, 0xd9, 0xb5, 0xfe,
		0xed, 0xb6, 0xbc, 0x8d, 0xd5, 0xba, 0xcd, 0xdc,
		0x3b, 0x1a, 0xdf, 0xe0, 0xa6, 0x9b, 0x40, 0x79,
		0x84, 0xa7, 0xc7, 0xb9, 0x67, 0x31, 0x2b, 0x87,
		0x77, 0x53, 0x19, 0x1c, 0xe4, 0xf4, 0x61, 0xbc,
		0x68, 0x6e, 0xb9, 0x28, 0x52, 0xf3, 0xe5, 0x20,
		0xea, 0x9d, 0xb8, 0x48, 0x5b, 0xc5, 0xae, 0xf1,
		0x70, 0xda, 0xd8, 0x6c, 0x65, 0xae, 0xce, 0xb3,
		0x26, 0x8b, 0xee, 0x7b, 0x22, 0x1b, 0xc8, 0x66,
		0x5f, 0x4a, 0xf3, 0xa4, 0x2c, 0xfc, 0xe3, 0x37,
		0x75, 0x99, 0x45, 0x4e, 0x14, 0x8b, 0xf7, 0xad,
		0x6c, 0xd0, 0x51, 0x3b, 0xec, 0x61, 0xf9, 0x6a,
		0x0c, 0x8b, 0xf2, 0x50, 0xdc, 0xc7, 0xa2, 0x7c,
		0x29, 0x15, 0xb6, 0xcb, 0x67, 0x54, 0x95, 0xe5,
		0x1f, 0x3e, 0xf6, 0x7e, 0xb9, 0xae, 0x04, 0xa8,
		0x9e, 0x68, 0x4f, 0xa4, 0x41, 0x57, 0xa4, 0xd2
	};

	/**********************************************************************************************/

	/*
	*                                     failure reason buffer
	*
	* Sent to client after failure status buffer
	* Always 128 bytes
	*
	*/
	
	typedef unsigned char failure_reason[failure_size];

	const failure_reason failure_connection =
	{
		0x79, 0x65, 0x12, 0x14, 0x18, 0xad, 0x3e, 0x87,
		0x64, 0x43, 0xbc, 0xd4, 0x64, 0xf3, 0xd2, 0xb2,
		0xb5, 0x98, 0x11, 0xa5, 0xb3, 0x05, 0x3f, 0xe0,
		0x79, 0x69, 0x8e, 0x1a, 0xad, 0x90, 0x75, 0x55,
		0x01, 0xd0, 0x29, 0x60, 0xab, 0x27, 0xb6, 0xb9,
		0x0f, 0xd4, 0x85, 0xfd, 0xc9, 0x00, 0xb4, 0x4f,
		0xe2, 0xcc, 0x51, 0xf4, 0x73, 0xd1, 0x42, 0xd9,
		0x35, 0x75, 0x31, 0x9c, 0xc2, 0x9f, 0xc5, 0x44,
		0x6e, 0x37, 0xd6, 0x0b, 0x5b, 0x32, 0x5f, 0xb7,
		0xea, 0x13, 0x85, 0xf7, 0x88, 0x9b, 0xf9, 0x87,
		0x1d, 0x50, 0x69, 0x52, 0xae, 0x68, 0x9f, 0x5b,
		0xbd, 0xfb, 0xe8, 0x86, 0x38, 0xab, 0xf1, 0xd7,
		0xc5, 0xe1, 0x6c, 0x5b, 0x4b, 0xc6, 0xf1, 0xcd,
		0x06, 0xbf, 0x52, 0xa5, 0x70, 0x15, 0x93, 0x54,
		0xbd, 0xd8, 0xe1, 0x6e, 0xaf, 0xd0, 0x8c, 0x1c,
		0xd6, 0x68, 0x89, 0xba, 0xf2, 0x9d, 0x10, 0x5a
	};

	const failure_reason failure_file_version =
	{
		0xbc, 0x75, 0x8a, 0xa0, 0x39, 0x34, 0xbe, 0x74,
		0x26, 0x3d, 0xfd, 0xf6, 0xdc, 0x6d, 0x0b, 0xfd,
		0x33, 0x79, 0xa4, 0xa4, 0x99, 0x7a, 0xf1, 0x28,
		0xac, 0x5d, 0x27, 0x13, 0x11, 0xff, 0x51, 0xbb,
		0xda, 0x5b, 0x59, 0xbf, 0xd3, 0x67, 0xe5, 0x81,
		0xcb, 0x02, 0xc3, 0xb8, 0xf7, 0xd2, 0xe5, 0x83,
		0xb7, 0x4b, 0x8b, 0x5f, 0xa9, 0x58, 0x2f, 0x50,
		0x8a, 0x82, 0xe1, 0x9a, 0x70, 0x87, 0x8d, 0x9c,
		0x46, 0x09, 0xba, 0xf0, 0x0c, 0x55, 0xa8, 0x78,
		0xc2, 0x56, 0x5e, 0xf1, 0x83, 0x27, 0xee, 0x01,
		0x02, 0xa8, 0x0b, 0x57, 0x28, 0x3c, 0x55, 0xd9,
		0xfe, 0x64, 0xa5, 0x30, 0xdf, 0x7d, 0x57, 0x44,
		0x7a, 0x8b, 0x20, 0xca, 0x8b, 0x06, 0xcb, 0x33,
		0x86, 0x37, 0x4b, 0xb8, 0xa6, 0x32, 0x3c, 0x05,
		0xc4, 0x16, 0xa6, 0xac, 0x56, 0xf6, 0x8b, 0xa9,
		0x1b, 0xda, 0x9f, 0x8c, 0xbe, 0xff, 0x99, 0x68
	};

	const failure_reason failure_authentication =
	{
		0x3b, 0x5f, 0x28, 0xf3, 0x6e, 0x95, 0x2a, 0xf4,
		0xcc, 0x4e, 0x3f, 0x35, 0x6a, 0x87, 0x4d, 0xe2,
		0x8e, 0x2c, 0x96, 0x9a, 0xe1, 0xd9, 0x69, 0xa4,
		0xaf, 0x06, 0x5f, 0xc0, 0xad, 0x80, 0x5a, 0xe6,
		0x12, 0xc7, 0x9a, 0xd7, 0x41, 0xf0, 0x4f, 0x8d,
		0x8c, 0x08, 0x8e, 0x3b, 0x09, 0x4e, 0x02, 0xde,
		0xf2, 0x91, 0x56, 0xd4, 0xcd, 0xd8, 0xc0, 0x8c,
		0xa7, 0x6f, 0x58, 0x40, 0x20, 0x04, 0x1c, 0xbe,
		0xd9, 0x39, 0x1a, 0x60, 0x9a, 0x49, 0x4e, 0x01,
		0x7a, 0x1a, 0x3e, 0x13, 0x66, 0xed, 0x69, 0xc9,
		0x36, 0x30, 0x97, 0x6d, 0xee, 0x55, 0x7b, 0x73,
		0x68, 0xe2, 0x9f, 0x2a, 0xc0, 0xf5, 0xc4, 0xf4,
		0x37, 0x97, 0x7e, 0x53, 0xb3, 0x73, 0x1a, 0x64,
		0xa0, 0x1a, 0x1b, 0x44, 0x97, 0xa1, 0x84, 0xd9,
		0x25, 0x7f, 0xe8, 0x8b, 0xc3, 0x19, 0x2e, 0xfc,
		0x27, 0x20, 0x8c, 0xbe, 0x91, 0x70, 0x02, 0x27
	};

	const failure_reason failure_no_active_licenses =
	{
		0xb2, 0x51, 0xa9, 0x4f, 0x12, 0x90, 0x73, 0x44, 
		0xe3, 0x3f, 0x3b, 0xfc, 0xf8, 0xac, 0x64, 0x72, 
		0x33, 0x6c, 0x5e, 0x90, 0x4a, 0x54, 0x3a, 0x31, 
		0xbe, 0xbd, 0xf1, 0x71, 0xc4, 0x3b, 0x13, 0x7e, 
		0x66, 0x98, 0x1c, 0x9e, 0x55, 0x7a, 0xbd, 0x39, 
		0x0a, 0x77, 0x42, 0x19, 0x85, 0xd8, 0xb3, 0x8b, 
		0x68, 0xb5, 0x5b, 0x78, 0x37, 0x5e, 0x32, 0x9f, 
		0x0b, 0x52, 0xd0, 0xbf, 0x6b, 0x59, 0x7b, 0xe7, 
		0xf2, 0x66, 0xf7, 0x01, 0xb4, 0xc5, 0xa5, 0x5a, 
		0xaf, 0x51, 0xd5, 0xbe, 0x13, 0x91, 0x20, 0x14, 
		0xd4, 0x09, 0x42, 0x4c, 0xee, 0xd9, 0xf8, 0x56, 
		0x67, 0x46, 0xaa, 0x69, 0x82, 0x7b, 0x92, 0xbe, 
		0xa8, 0xe1, 0xcb, 0x0b, 0xe6, 0xf4, 0xc5, 0xd7, 
		0xe4, 0x49, 0x5e, 0x08, 0x89, 0x10, 0x21, 0x3c, 
		0xeb, 0x01, 0x5b, 0xe3, 0x15, 0xa1, 0x04, 0x31, 
		0x83, 0xd9, 0x25, 0xe8, 0x03, 0x61, 0x2b, 0x66
	};
}